---

name: Интерполяция
theory: |

  В уроке про конкатенацию перед нами стояла задача создать заголовок письма из двух переменных и знаков препинания. Вы скорее всего решили задачу так:

  ```python
  first_name = 'Joffrey'
  greeting = 'Hello'

  print(greeting + ", " + first_name + "!")
  # => 'Hello, Joffrey!'
  ```

  Это довольно простой случай, но чтобы прочитать такой код, уже нужно приложить усилие. Приходится следить за несколькими кавычками и пробелами.

  Есть другой, более удобный и изящный способ решения той же задачи — **интерполяция** с использованием f-строк. Вот, как это выглядит:

  ```python
  first_name = 'Joffrey'

  print(f'Hello, {first_name}!')
  # => 'Hello, Joffrey!'
  ```

  Буква `f` указывает на то, что мы создаём f-строку. С помощью фигурных скобок в неё добавляются переменные, которые подлежат интерполяции.

  Почти во всех языках интерполяция предпочтительнее конкатенации для объединения строк. Строка при этом получается склеенная, и внутри неё хорошо просматриваются пробелы и другие символы. Такие строки легко читать и использовать.

instructions: |

  Выведите на экран строку `Do you want to eat, <name>?`. Где вместо `<name>` должна использоваться переменная `stark`. Вывод должен получиться таким:

  <pre class='hexlet-basics-output'>
  Do you want to eat, Arya?
  </pre>

tips: []

definitions:
  - name: Интерполяция
    description: способ получения сложной строки из нескольких простых с использованием специальных шаблонов.
